name: Build and publish (matrix)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish to CurseForge'
        required: true
        default: 'false'
        type: choice
        options: ['false', 'true']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Minecraft 1.21.8 (latest)
          - minecraft_version: '1.21.8'
            yarn_mappings: '1.21.8+build.1'
            loader_version: '0.17.2'
            fabric_version: '0.133.0+1.21.8'
            minecraft_dependency: '>=1.21.8'
            loader_dependency: '>=0.15.0'
          # Minecraft 1.21.4
          - minecraft_version: '1.21.4'
            yarn_mappings: '1.21.4+build.2'
            loader_version: '0.17.2'
            fabric_version: '0.119.4+1.21.4'
            minecraft_dependency: '>=1.21.4'
            loader_dependency: '>=0.15.0'
          # Minecraft 1.21.1 (current stable)
          - minecraft_version: '1.21.1'
            yarn_mappings: '1.21.1+build.1'
            loader_version: '0.17.2'
            fabric_version: '0.116.6+1.21.1'
            minecraft_dependency: '>=1.21.1'
            loader_dependency: '>=0.15.0'
          # Minecraft 1.21
          - minecraft_version: '1.21'
            yarn_mappings: '1.21+build.9'
            loader_version: '0.17.2'
            fabric_version: '0.105.6+1.21'
            minecraft_dependency: '>=1.21'
            loader_dependency: '>=0.15.0'
          # Minecraft 1.20.4 (LTS)
          - minecraft_version: '1.20.4'
            yarn_mappings: '1.20.4+build.3'
            loader_version: '0.15.11'
            fabric_version: '0.97.3+1.20.4'
            minecraft_dependency: '>=1.20.4'
            loader_dependency: '>=0.15.0'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle (remap + sources)
        run: |
          ./gradlew --no-daemon --stacktrace -Porg.gradle.jvmargs=-Xmx3g \
            -Pminecraft_version=${{ matrix.minecraft_version }} \
            -Pyarn_mappings='${{ matrix.yarn_mappings }}' \
            -Ploader_version=${{ matrix.loader_version }} \
            -Pfabric_version=${{ matrix.fabric_version }} \
            -Pminecraft_dependency='${{ matrix.minecraft_dependency }}' \
            -Ploader_dependency='${{ matrix.loader_dependency }}' \
            build remapJar remapSourcesJar

      - name: Validate build artifacts
        run: |
          if [ ! -f build/libs/*.jar ]; then
            echo "No JAR files found in build/libs/"
            exit 1
          fi
          echo "Build artifacts:"
          ls -la build/libs/

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ai-chat-${{ matrix.minecraft_version }}
          path: |
            build/libs/*.jar
          if-no-files-found: error

      - name: Find primary jar
        id: find_jar
        shell: bash
        run: |
          JAR=$(ls -1 build/libs/*.jar | grep -vE "-sources|-dev" | head -n1)
          if [ -z "$JAR" ]; then echo "No primary jar found"; exit 1; fi
          echo "jar=$JAR" >> "$GITHUB_OUTPUT"

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          else
            echo "version=${{ github.sha }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish to CurseForge
        if: ${{ (github.event_name == 'workflow_dispatch' && inputs.publish == 'true') || startsWith(github.ref, 'refs/tags/v') }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          files-primary: ${{ steps.find_jar.outputs.jar }}
          name: AI Chat ${{ steps.version.outputs.version }}-${{ matrix.minecraft_version }}
          version: ${{ steps.version.outputs.version }}
          loaders: fabric
          game-versions: ${{ matrix.minecraft_version }}
          curseforge-id: ${{ secrets.CURSEFORGE_PROJECT_ID }}
          curseforge-token: ${{ secrets.CURSEFORGE_API_TOKEN }}
          curseforge-dependencies: |
            fabric-api(required)
